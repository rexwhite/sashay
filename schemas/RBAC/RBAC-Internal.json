{
  "openapi": "3.0.0",
  "info": {
    "description": "Internal Integrations API for Role Based Access Control.",
    "version": "1.0.0",
    "title": "Internal Integrations API for Role Based Access Control.",
    "license": {
      "name": "AGPL-3.0",
      "url": "https://opensource.org/licenses/AGPL-3.0"
    }
  },
  "tags": [
    {
      "name": "Group",
      "description": "Operations about groups"
    },
    {
      "name": "Principal",
      "description": "Operations about principals"
    }
  ],
  "paths": {
    "/integrations/tenant/{orgId}/groups/": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "List the groups for a tenant",
        "description": "By default, responses are sorted in ascending order by group name",
        "operationId": "listGroups",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Organization ID of the tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/QueryLimit"
          },
          {
            "$ref": "#/components/parameters/QueryOffset"
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "A list of UUIDs to filter listed groups.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "order_by",
            "required": false,
            "description": "Parameter for ordering groups by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "modified"
              ]
            }
          },
          {
            "in": "query",
            "name": "username",
            "required": false,
            "description": "Optional parameter for filtering by username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of group objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPagination"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions to list groups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/tenant/{orgId}/groups/{uuid}/roles/": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "List the roles for a group in a tenant",
        "description": "By default, responses are sorted in ascending order by role name",
        "operationId": "listRolesForGroup",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Organization ID of the tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "role_name",
            "in": "query",
            "required": false,
            "description": "Parameter for filtering group roles by role `name` using string contains search.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role_description",
            "in": "query",
            "required": false,
            "description": "Parameter for filtering group roles by role `description` using string contains search.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/QueryLimit"
          },
          {
            "$ref": "#/components/parameters/QueryOffset"
          },
          {
            "in": "query",
            "name": "order_by",
            "required": false,
            "description": "Parameter for ordering roles by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "modified"
              ]
            }
          },
          {
            "in": "query",
            "name": "username",
            "required": false,
            "description": "Optional parameter for filtering by username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of roles for a group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRolesPagination"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions to list roles for group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/tenant/{orgId}/principal/{username}/groups/": {
      "get": {
        "tags": [
          "Principal"
        ],
        "summary": "List the groups for a principal in a tenant",
        "description": "By default, responses are sorted in ascending order by group name",
        "operationId": "listGroupsForPrincipal",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Organization ID of the tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/QueryLimit"
          },
          {
            "$ref": "#/components/parameters/QueryOffset"
          },
          {
            "name": "username",
            "in": "path",
            "description": "Username of the principal",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "A list of UUIDs to filter listed groups.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "order_by",
            "required": false,
            "description": "Parameter for ordering groups by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "modified"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of group objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPagination"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions to list groups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/tenant/{orgId}/principal/{username}/groups/{uuid}/roles/": {
      "get": {
        "tags": [
          "Principal"
        ],
        "summary": "List the roles for a group for a principal in a tenant",
        "description": "By default, responses are sorted in ascending order by role name",
        "operationId": "listRolesForGroupsForPrincipal",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Organization ID of the tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Username of the principal",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "role_name",
            "in": "query",
            "required": false,
            "description": "Parameter for filtering group roles by role `name` using string contains search.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/QueryLimit"
          },
          {
            "$ref": "#/components/parameters/QueryOffset"
          },
          {
            "in": "query",
            "name": "order_by",
            "required": false,
            "description": "Parameter for ordering roles by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "modified"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of roles for a group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRolesPagination"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions to list roles for group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "/api/rbac/v1"
    }
  ],
  "components": {
    "parameters": {
      "QueryOffset": {
        "in": "query",
        "name": "offset",
        "required": false,
        "description": "Parameter for selecting the offset of data.",
        "schema": {
          "type": "integer",
          "default": 0,
          "minimum": 0
        }
      },
      "QueryLimit": {
        "in": "query",
        "name": "limit",
        "required": false,
        "description": "Parameter for selecting the amount of data returned.",
        "schema": {
          "type": "integer",
          "default": 10,
          "minimum": 1,
          "maximum": 1000
        }
      }
    },
    "schemas": {
      "Error": {
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Not found."
                },
                "status": {
                  "type": "string",
                  "example": "403"
                }
              }
            }
          }
        }
      },
      "Error403": {
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "You do not have permission to perform this action."
                },
                "source": {
                  "type": "string",
                  "example": "detail"
                },
                "status": {
                  "type": "string",
                  "example": "403"
                }
              }
            }
          }
        }
      },
      "UUID": {
        "type": "object",
        "required": [
          "uuid"
        ],
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "example": "57e60f90-8c0c-4bd1-87a0-2143759aae1c"
          }
        }
      },
      "Timestamped": {
        "type": "object",
        "required": [
          "created",
          "modified"
        ],
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-21T17:32:28Z"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "example": "2019-03-04T07:25:58Z"
          }
        }
      },
      "PaginationMeta": {
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 30
          }
        }
      },
      "PaginationLinks": {
        "properties": {
          "first": {
            "type": "string",
            "format": "uri",
            "example": "/api/rbac/(resources)/?offset=0&limit=10"
          },
          "previous": {
            "type": "string",
            "format": "uri",
            "example": "/api/rbac/(resources)/?offset=20&limit=10"
          },
          "next": {
            "type": "string",
            "format": "uri",
            "example": "/api/rbac/(resources)/?offset=40&limit=10"
          },
          "last": {
            "type": "string",
            "format": "uri",
            "example": "/api/rbac/(resources)/?offset=90&limit=10"
          }
        }
      },
      "ListPagination": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinks"
          }
        }
      },
      "Group": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "GroupA"
          },
          "description": {
            "type": "string",
            "example": "A description of GroupA"
          }
        }
      },
      "GroupOut": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Group"
          },
          {
            "$ref": "#/components/schemas/UUID"
          },
          {
            "$ref": "#/components/schemas/Timestamped"
          },
          {
            "properties": {
              "principalCount": {
                "type": "integer",
                "minimum": 0
              },
              "roleCount": {
                "type": "integer",
                "minimum": 0
              },
              "system": {
                "type": "boolean",
                "default": false
              },
              "platform_default": {
                "type": "boolean",
                "default": false
              },
              "admin_default": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ]
      },
      "GroupRolesPagination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ListPagination"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleOut"
                }
              }
            }
          }
        ]
      },
      "GroupPagination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ListPagination"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            }
          }
        ]
      },
      "Role": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "RoleA"
          },
          "display_name": {
            "type": "string",
            "example": "ARoleName"
          },
          "description": {
            "type": "string",
            "example": "A description of RoleA"
          }
        }
      },
      "RoleOut": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Role"
          },
          {
            "$ref": "#/components/schemas/UUID"
          },
          {
            "$ref": "#/components/schemas/Timestamped"
          },
          {
            "properties": {
              "policyCount": {
                "type": "integer",
                "minimum": 0
              },
              "accessCount": {
                "type": "integer",
                "minimum": 0
              },
              "applications": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "catalog"
                }
              },
              "system": {
                "type": "boolean",
                "default": false
              },
              "platform_default": {
                "type": "boolean",
                "default": false
              },
              "admin_default": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ]
      }
    }
  }
}